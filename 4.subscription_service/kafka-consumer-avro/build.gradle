import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.github.davidmc24.gradle.plugin.avro-base" version "1.2.0"
	id 'java'
}

group = 'au.com.nab'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	gradlePluginPortal()
	mavenCentral()
	maven {
		url "https://packages.confluent.io/maven"
	}
}

dependencies {
	compileOnly 'org.projectlombok:lombok:1.18.20'
	compile "org.apache.avro:avro:1.10.1"
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '5.3.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	implementation 'org.projectlombok:lombok'
}

test {
	useJUnitPlatform()
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
	source("src/main/avro")
	outputDir = file("src/main/java")
}

tasks.named("compileJava").configure {
	source(generateAvro)
}